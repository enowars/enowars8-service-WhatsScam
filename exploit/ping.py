import datetime
from httpx import AsyncClient
import random
import string
from bs4 import BeautifulSoup



async def putflag():
    start_time = datetime.datetime.now()
    addr = "172.21.56.196"
    client = AsyncClient(
            base_url=f"http://{addr}:{9696}"
        )
    print(datetime.datetime.now() - start_time)
    ######
    first_break = datetime.datetime.now()
    email = ''.join(random.choice(string.ascii_lowercase) for _ in range(10)) + "@example.com"
    firstName = ''.join(random.choice(string.ascii_lowercase) for _ in range(10))
    password1 = ''.join(random.choice(string.ascii_lowercase) for _ in range(10))
    password2 = password1
    public_key = "on"
    response = await client.post(
        "/sign-up",
        data={
            "email": email,
            "firstName": firstName,
            "public_key": public_key,
            "password1": password1,
            "password2": password2,
        },
        follow_redirects=True,
    )
    print(f"Time to sign up: {datetime.datetime.now() - first_break}")
    ######
    second_break = datetime.datetime.now()
    response = await client.post("/logout", follow_redirects=True)
    print(f"Time to logout: {datetime.datetime.now() - second_break}")
    #print(response.text)
    ######
    third_break = datetime.datetime.now()
    email1 = ''.join(random.choice(string.ascii_lowercase) for _ in range(10)) + "@example.com"
    firstName1 = ''.join(random.choice(string.ascii_lowercase) for _ in range(10))
    password11 = ''.join(random.choice(string.ascii_lowercase) for _ in range(10))
    password21 = password1
    public_key1 = None
    response = await client.post(
        "/sign-up",
        data={
            "email": email1,
            "firstName": firstName1,
            "public_key": public_key1,
            "password1": password11,
            "password2": password21,
        },
        follow_redirects=True,
    )
    #print(response.text)
    print(f"Time to sign up: {datetime.datetime.now() - third_break}")
    ######
    print("hier")

    fourth_break = datetime.datetime.now()
    response = await client.get("/userlist", follow_redirects=True)
    soup = BeautifulSoup(response.text, "html.parser")
    #print(soup)
    li = soup.find_all("li")
    li = [x.text for x in li]
    li = [x.split(" ") for x in li]
    li = filter(lambda x: email + '\n' in x, li)
    li = filter(lambda x: x != '' and x != '\n' and x != email + '\n', list(li)[0])
    public_key = list(li)
    public_key = public_key[0].strip()
    print(f"Time to get userlist: {datetime.datetime.now() - fourth_break}")
    #print(public_key)
    
    #######
    fifth_break = datetime.datetime.now()
    note = ''.join(random.choice(string.ascii_lowercase) for _ in range(10))
    response = await client.post(
        "/",
        data={"note": note, "public_key": public_key},
        follow_redirects=True,
    )
    print(f"Time to post note: {datetime.datetime.now() - fifth_break}")
    #######
    
    #await client.aclose()
    print(f"Total time: {datetime.datetime.now() - start_time}")

if __name__ == "__main__":
    import asyncio
    total_time = datetime.datetime.now()
    m = 1000
    n = []
    for i in range(m):
        c = datetime.datetime.now()
        asyncio.run(putflag())
        n.append(datetime.datetime.now() - c)
    
    print(f"Average time: {sum(n, datetime.timedelta(0)) / len(n)}")
    print(f"Total time: {datetime.datetime.now() - total_time}")
    
    