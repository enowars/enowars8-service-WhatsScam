from Crypto.Util import number
from gmpy2 import is_prime
import time

n = 256
primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251]

def test_small(p,q):
  for _ in primes:
    if p % _ == 0 or q % _ == 0: return False
  return True

t0 = time.time()
for _ in range(100):
  while True:
    p = number.getRandomNBitInteger(n)
    p |= 1
    q = p + 6
    if test_small(p,q) and is_prime(p) and is_prime(q): 
      #print(p,q)
      break
print('time: %.3f' % (time.time() - t0))
